---

- name: create an ACL with rules
  consul_acl:
    host: "{{ acl_host }}"
    mgmt_token: "{{ mgmt_token }}"
    name: "{{ test_consul_acl_rule_name }}"
    rules:
      - key: "foo"
        policy: read
      - key: "private/bar"
        policy: deny
  register: created_acl

- name: verify created ACL's rules
  assert:
    that:
      - created_ruleless_acl.changed
      - created_acl.token | length == 36
      - created_acl.name == test_consul_acl_rule_name
      - (created_acl.rules | json_query("key.foo.policy")) == "read"
      - (created_acl.rules | json_query("key.'private/bar'.policy")) == "deny"

- name: create same rule-less ACL
  consul_acl:
    host: "{{ acl_host }}"
    mgmt_token: "{{ mgmt_token }}"
    name: "{{ test_consul_acl_rule_name }}"
    rules:
      - key: "foo"
        policy: read
      - key: "private/bar"
        policy: deny
  register: doubly_created_acl

- name: verify idempotence when creating ruleless ACL
  assert:
    that:
      - not doubly_created_ruleless_acl.changed

- name: clean up
  consul_acl:
    host: "{{ acl_host }}"
    mgmt_token: "{{ mgmt_token }}"
    token: "{{ doubly_created_acl.token }}"
    state: absent
